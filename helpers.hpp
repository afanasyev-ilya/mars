#pragma once

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

bool is_float(std::string my_string)
{
    std::istringstream iss(my_string);
    float f;
    iss >> std::noskipws >> f;
    return iss.eof() && !iss.fail();
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

double to_float(std::string my_string)
{
    std::istringstream iss(my_string);
    double f = 0;
    iss >> std::noskipws >> f;
    return f;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

template <typename T>
int sign(T val)
{
    return (T(0) < val) - (val < T(0));
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

template <typename T>
void print(std::vector<T> &_data)
{
    if(_data.size() < MAX_PRINTING_SIZE)
    {
        for(auto &i: _data)
            std::cout << i << ' ';
        std::cout << std::endl;
    }
    else
    {
        std::cout << "Warning! vector is too large to print! (" << _data.size() << ")" << std::endl;
    }
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
